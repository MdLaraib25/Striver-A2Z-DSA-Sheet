// Imagine it as 1D array and solve it and after that we can get the rows and columns just by dividing the index from no of columns(m );
//  for ex if ans at index 11 for 1d Arrays  having (3 * 4) matrix then in 2d array its index will be the (2,3); 
// to get this 2d index - 
//  for rows divide index by no of columns (m)  -> 11 / 4 = 2
//  for columns get the remainder by dividing index by no of columns(m) -> 11 % 4  = 3
//  so the element is at index (2,3) in the 2d matrix 

// Solution 
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int n = matrix.length;
        int m = matrix[0].length;
        int low = 0 , high = (m * n - 1);
        while(low <= high){
            int mid = (low + high)/2;
            int row = mid / m;
            int col = mid % m;
            if(matrix[row][col] == target) return true;
            else if (matrix[row][col] < target) low = mid + 1;
            else high = mid - 1;
        } return false;
    }
}
