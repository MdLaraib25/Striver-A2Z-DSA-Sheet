class Solution {
    public boolean isNStraightHand(int[] hand, int groupSize) {
        int n = hand.length;
        if (n % groupSize != 0) return false;

        Arrays.sort(hand);

        HashMap<Integer, Integer> map = new HashMap<>();
        for (int num : hand) {
            map.put(num, map.getOrDefault(num, 0) + 1);
        }

        for (int num : hand) {
            if (!map.containsKey(num)) continue; // already used in previous group

            int count = map.get(num);  // number of groups starting with this number

            for (int i = 0; i < groupSize; i++) {
                int curr = num + i;
                if (!map.containsKey(curr)) return false; // cannot form consecutive group

                map.put(curr, map.get(curr) - count);
                if (map.get(curr) == 0) {
                    map.remove(curr);
                }
            }
        }

        return true;
    }

    public static void main(String[] args) {
        Solution sol = new Solution();
        int[] hand = {1,2,3,6,2,3,4,7,8};
        int groupSize = 3;
        System.out.println(sol.isNStraightHand(hand, groupSize)); // Output: true
    }
}
