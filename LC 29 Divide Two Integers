class Solution {
    public int divide(int dividend, int divisor) {
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }

        if (dividend == divisor) return 1;
        
        boolean sign = (dividend >= 0) == (divisor >= 0);

        long n = Math.abs((long) dividend);
        long d = Math.abs((long) divisor);
        long quotient = 0;

        while(n >= d){
            int cnt = 0;
            while (n >= (d << (cnt + 1))) cnt += 1;
            quotient += 1L << cnt;
            n -= (d << cnt);
        }

        if (quotient >= (1L << 31)) {
            return sign ? Integer.MAX_VALUE : Integer.MIN_VALUE;
        }

        if(sign) return (int)quotient;
        else return (int)-quotient;
    }
}
