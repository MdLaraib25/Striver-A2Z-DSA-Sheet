class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        int n = intervals.length;
        List<int[]> ans = new LinkedList<>();
        int i = 0; 
        while(i < n && intervals[i][1] < newInterval[0]){  // for left side which is not overlapping
            ans.add(intervals[i]);
            i = i + 1;
        }

        while(i < n && intervals[i][0] <= newInterval[1]){  // for mid side which is overlapping
            newInterval[0] = Math.min(newInterval[0], intervals[i][0]);
            newInterval[1] = Math.max(newInterval[1], intervals[i][1]);
            i = i + 1;
        }
        ans.add(newInterval);

        while(i < n){  // for lerightft side which is not overlapping
            ans.add(intervals[i]);
            i = i + 1;
        } return ans.toArray(new int[ans.size()][]);
    }
}
