Approach - 01 - Brute 

class Solution {
    public int numSubarraysWithSum(int[] nums, int goal) {
        int cnt= 0;
        for(int i = 0; i < nums.length; i++){
            int sum = 0;
            for(int j = i; j < nums.length; j++){
                sum += nums[j];
                if(sum == goal){
                    cnt++;
                }
            }
        } return cnt;
    }
}

TC - o(N^2)
SC - 0(1)

Approach - 02 

class Solution {
    public int numSubarraysWithSum(int[] nums, int goal) {
        return totMax(nums, goal) - totMax(nums, goal - 1);
    }

    private int totMax(int[] nums, int goal) {
        if (goal < 0) return 0;
        int l = 0, sum = 0, cnt = 0;
        for (int r = 0; r < nums.length; r++) {
            sum += nums[r];
            while (sum > goal) {
                sum -= nums[l];
                l++;
            }
            cnt += (r - l + 1); 
        }
        return cnt;
    }
}
